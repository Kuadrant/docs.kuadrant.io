name: CI

on:
  merge_group:
    types: [checks_requested]
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # schedule:
  #   # Runs at 00:00 UTC every day
  #   - cron: '0 0 * * *'

permissions:
  contents: write

jobs:
  deploy:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all commits/branches
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: '**/pyproject.toml'
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: uv pip install --system -r pyproject.toml
      - name: Setup Docs Deploy
        run: |
          git config --global user.name "Docs Deploy"
          git config --global user.email "kuadrant@googlegroups.com"
      - run: |
          mike deploy --push dev -t "dev"

  build:
    if: github.event_name == 'pull_request' || github.event_name == 'schedule' || github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all commits/branches
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: '**/pyproject.toml'
      - run: uv pip install --system -r pyproject.toml
      - run: mkdocs build -s
  required-checks:
    name: CI Required Checks
    # This check adds a list of checks to one job to simplify adding settings to the repo.
    # If a new check is added in this file, and it should be retested on entry to the merge queue,
    # it needs to be added to the list below aka needs: [ existing check 1, existing check 2, new check ].
    needs: ['build']
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo '${{ toJSON(needs) }}' | jq -e 'all(.[]; .result == "success" or .result == "skipped")'
